create or replace PROCEDURE QUERY_TO_CSV(QUERY_IN IN CLOB, CSV_NAME IN VARCHAR2) IS
  CARTELLA_CSV VARCHAR2(200) :=  'EXT_TABLES_'||USER;
  FILE_CSV VARCHAR2(200) := '';
  PTR_FILE_IN     UTL_FILE.FILE_TYPE;
  V_CURSOR_ID     PLS_INTEGER;
  V_COL_CNT       PLS_INTEGER;
  V_COLUMNS       DBMS_SQL.DESC_TAB;
  L_ROWS          PLS_INTEGER;
  L_BUFFER        VARCHAR2(32767);
  ESTRAZIONE SYS_REFCURSOR;
  ------------------------
  G_SEP         VARCHAR2(5)  := ';';
  OGGI VARCHAR2(300) := TO_CHAR(TRUNC(SYSDATE), 'YYYY-MM-DD');
BEGIN
  FILE_CSV := OGGI || '_' || CSV_NAME || '.CSV';
  
  V_CURSOR_ID := DBMS_SQL.OPEN_CURSOR;
  DBMS_SQL.PARSE(V_CURSOR_ID, QUERY_IN, DBMS_SQL.NATIVE);
  DBMS_SQL.DESCRIBE_COLUMNS(V_CURSOR_ID, V_COL_CNT, V_COLUMNS);
  
  FOR I IN 1 .. V_COL_CNT LOOP
    DBMS_SQL.DEFINE_COLUMN(V_CURSOR_ID, I, L_BUFFER, 32767 );
  END LOOP;
  
  IF QUERY_IN IS NOT NULL THEN
    L_ROWS := DBMS_SQL.EXECUTE(V_CURSOR_ID);
  END IF;
  
  BEGIN --Provo a cancellare il csv
    UTL_FILE.FREMOVE(CARTELLA_CSV, FILE_CSV);
  EXCEPTION WHEN OTHERS THEN 
    IF SQLCODE != -29283 THEN
      RAISE;
    END IF;--Se non esiste continuo
  END;
  PTR_FILE_IN := UTL_FILE.FOPEN(CARTELLA_CSV, FILE_CSV, 'a');
  
  --Scrivo le intestazioni
  FOR I IN 1 .. V_COL_CNT LOOP
    IF i = 1 THEN
      UTL_FILE.put(PTR_FILE_IN, g_sep);
    END IF;
    UTL_FILE.put(PTR_FILE_IN, V_COLUMNS(i).col_name);
  END LOOP;
  UTL_FILE.new_line(PTR_FILE_IN);

  --Scrivo i dati
  LOOP
    EXIT WHEN DBMS_SQL.fetch_rows(V_CURSOR_ID) = 0;

    FOR i IN 1 .. V_COL_CNT LOOP
      IF i = 1 THEN
        UTL_FILE.put(PTR_FILE_IN, g_sep);
      END IF;

      DBMS_SQL.COLUMN_VALUE(V_CURSOR_ID, i, l_buffer);
      UTL_FILE.put(PTR_FILE_IN, l_buffer);
    END LOOP;
    UTL_FILE.NEW_LINE(PTR_FILE_IN);
  END LOOP;
  
  
  DBMS_SQL.CLOSE_CURSOR(V_CURSOR_ID);
  UTL_FILE.FFLUSH(PTR_FILE_IN);
  UTL_FILE.FCLOSE(PTR_FILE_IN);
EXCEPTION WHEN OTHERS THEN
  DBMS_SQL.CLOSE_CURSOR(V_CURSOR_ID);
  UTL_FILE.FCLOSE_ALL;
  RAISE;
END;
/